/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab2.ui;

import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import lab2.entities.Peer;
import lab2.utils.Constants;

/**
 *
 * @author adekola
 */
public class MainForm extends javax.swing.JFrame {

    Vector<Peer> peersList;
    Peer selectedPeer;
    DefaultListModel peersListModel;
    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        peersList = new Vector();
        listboxPeers.setListData(peersList);
        selectedPeer = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listboxPeers = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        txtHostAddress = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnAddPeer = new javax.swing.JButton();
        cbxCommunicationMode = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        startConference = new javax.swing.JButton();
        stopConference = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listboxPeers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listboxPeersMouseClicked(evt);
            }
        });
        listboxPeers.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listboxPeersValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listboxPeers);

        jLabel1.setText("Host Address");

        jLabel2.setText("Peers");

        btnAddPeer.setText("Add");
        btnAddPeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPeerActionPerformed(evt);
            }
        });

        cbxCommunicationMode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Unicast", "Multicast" }));

        jLabel3.setText("Communication Mode");

        startConference.setText("Start Conference");
        startConference.setEnabled(false);

        stopConference.setText("Stop Conference");

        jCheckBox1.setText("Mute");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(txtHostAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addComponent(btnAddPeer))
                                .addComponent(jLabel2))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbxCommunicationMode, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(startConference)
                        .addGap(18, 18, 18)
                        .addComponent(stopConference)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHostAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddPeer)
                    .addComponent(cbxCommunicationMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startConference)
                    .addComponent(stopConference)
                    .addComponent(jCheckBox1))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddPeerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPeerActionPerformed
        // TODO add your handling code here:
        Peer p = new Peer(txtHostAddress.getText(), Constants.SEND_PORT);
        if (!peerExists(p)){
            peersList.add(p);
            listboxPeers.setListData(peersList);
        }
    }//GEN-LAST:event_btnAddPeerActionPerformed

    boolean peerExists(Peer peer){
        boolean result = false;
        for(Peer p: peersList){
            if(p.getIpAddress().equals(peer.getIpAddress())){
                    result = true;
                    break;
            }
        }
        return result;
    }
    
    private void listboxPeersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listboxPeersValueChanged
        // TODO add your handling code here:
         if (!evt.getValueIsAdjusting()) { //checks that the value changing event is the last in the chain in this case, the mouse up during a click action
            selectedPeer = (Peer) listboxPeers.getSelectedValue();
        }
    }//GEN-LAST:event_listboxPeersValueChanged

    private void listboxPeersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listboxPeersMouseClicked
        // TODO add your handling code here:
            if (evt.getClickCount() == 2) { // a user clicks twice = Double click
                //initiate a call to the selected peer
                if(selectedPeer != null){
                    OutgoingCallDialog call =  new OutgoingCallDialog(this, true, selectedPeer);
                    call.setVisible(true);
                }
            }
    }//GEN-LAST:event_listboxPeersMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPeer;
    private javax.swing.JComboBox cbxCommunicationMode;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listboxPeers;
    private javax.swing.JButton startConference;
    private javax.swing.JButton stopConference;
    private javax.swing.JTextField txtHostAddress;
    // End of variables declaration//GEN-END:variables
}
